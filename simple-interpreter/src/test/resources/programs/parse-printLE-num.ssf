//This file is part of the Simple Code Project
//DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//Copyright (C) 2023  Patrick Hechler
//
//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program.  If not, see <https://www.gnu.org/licenses/>.

// this function parses the first argument (modulo 255) and then prints it as a little-endian hex number
func main <ubyte exitnum> <-- (unum argc, char## argv) {
    char# number <-- argv[1];
	exitnum <-- 0;
	while (number#) {
		exitnum <-- exitnum * 10 + number# - '0';
		number <-- number + 1;
	}
	char[4] print;
	unum off <-- 0;
	while (1) {
		if ((exitnum & HEX-F) < 10) {
			print[off] <-- (exitnum & HEX-F) + '0';
		} else {
			print[off] <-- (exitnum & HEX-F) + ('A' - 10);
		}
		exitnum <-- exitnum >> 4;
		off <-- off + 1;
		if (!exitnum) {
            print[off] <-- '\0';
			std:writestr<?,exitnum><--(print);
			std:exit(exitnum);
		}
	}
}
