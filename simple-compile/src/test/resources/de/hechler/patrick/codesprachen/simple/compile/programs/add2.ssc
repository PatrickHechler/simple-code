//This file is part of the Simple Code Project
//DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//Copyright (C) 2023  Patrick Hechler
//
//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program.  If not, see <https://www.gnu.org/licenses/>.

// this function prints 5 + 4 = 9 and exits with 0
func main add_main(num argc, char## argv) --> <num exitnum> {
	var num a <-- 5;
	var num b <-- 4;
	var num c <-- a + b;
	var char[64] myBufA;
	var num lenA;
	var char[64] myBufB;
	var num lenB;
	var char[64] myBufC;
	var num lenC;
	var (num value, char# buf, num system, char# bufLen)
		--> <num strLen, char# newBuf, num system_unmodified, num bufNewLen> strFromNumArg;
	strFromNumArg:value <-- a;
	strFromNumArg:buf <-- myBufA;
	strFromNumArg:system <-- 10;
	strFromNumArg:bufLen <-- 64;
	call std:strFromNum strFromNumArg;
	lenA <-- strFromNumArg:strLen;
	strFromNumArg:value <-- b; // assume that all buffers are large enough
	strFromNumArg:buf <-- myBufB;
	call std:strFromNum strFromNumArg;
	lenB <-- strFromNumArg:strLen;
	strFromNumArg:value <-- c;
	strFromNumArg:buf <-- myBufC;
	call std:strFromNum strFromNumArg;
	lenC <-- strFromNumArg:strLen;
	var (num id, num length, ubyte# data) --> <num id, wrote> writeArg;
	writeArg:id <-- std:out;
	writeArg:length <-- lenA;
	writeArg:data <-- myBufA;
	call std:write writeArg;
	writeArg:length <-- 3;
	writeArg:data <-- " + ";
	call std:write writeArg;
	writeArg:length <-- lenB;
	writeArg:data <-- myBufB;
	call std:write writeArg;
	writeArg:length <-- 3;
	writeArg:data <-- " = ";
	call std:write writeArg;
	writeArg:length <-- lenC;
	writeArg:data <-- myBufC;
	call std:write writeArg;
	writeArg:length <-- 1;
	writeArg:data <-- "\n";
	call std:write writeArg;
	exitnum <-- 0;
}
